{
	"info": {
		"_postman_id": "10a2a3f7-5f5d-4071-b00a-7e0b9eac5090",
		"name": "Bookshelf",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "32790837"
	},
	"item": [
		{
			"name": "Directors",
			"item": [
				{
					"name": "Get All Directors",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is either 200 or 201\", () => {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 50ms\", ()=>{\r",
									"    pm.expect(pm.response.responseTime).to.be.below(50);\r",
									"});\r",
									"\r",
									"pm.test(\"Testing Directors has all the required Information\", ()=>{\r",
									"    const responseJson = pm.response.json();\r",
									"    pm.expect(responseJson.name).to.be.not.null;\r",
									"    pm.expect(responseJson.age).to.be.not.null;\r",
									"    pm.expect(responseJson.email).to.be.not.null;\r",
									"    pm.expect(responseJson.biography).to.be.not.null;\r",
									"    pm.expect(responseJson.id).to.be.not.null;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:5000/api/v1/directors",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"v1",
								"directors"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Director By Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is either 200 or 201\", () => {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 50ms\", ()=>{\r",
									"    pm.expect(pm.response.responseTime).to.be.below(50);\r",
									"});\r",
									"\r",
									"pm.test(\"Testing Directors has all the required Information\", ()=>{\r",
									"    const responseJson = pm.response.json();\r",
									"    pm.expect(responseJson.name).to.be.not.null;\r",
									"    pm.expect(responseJson.age).to.be.not.null;\r",
									"    pm.expect(responseJson.email).to.be.not.null;\r",
									"    pm.expect(responseJson.biography).to.be.not.null;\r",
									"    pm.expect(responseJson.id).to.be.not.null;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:5000/api/v1/directors/65d5ae282ea37099cde7f69f",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"v1",
								"directors",
								"65d5ae282ea37099cde7f69f"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Director",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is either 200 or 201\", () => {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 50ms\", ()=>{\r",
									"    pm.expect(pm.response.responseTime).to.be.below(100);\r",
									"});\r",
									"\r",
									"pm.test(\"Testing Directors has all the required Information\", ()=>{\r",
									"    const responseJson = pm.response.json();\r",
									"    pm.expect(responseJson.name).to.be.not.null;\r",
									"    pm.expect(responseJson.age).to.be.not.null;\r",
									"    pm.expect(responseJson.email).to.be.not.null;\r",
									"    pm.expect(responseJson.biography).to.be.not.null;\r",
									"    pm.expect(responseJson.id).to.be.not.null;\r",
									"});\r",
									"\r",
									"pm.test(\"Testing Person Added Information\", ()=>{\r",
									"    const responseJson = pm.response.json();\r",
									"    pm.expect(responseJson.name).to.eql(\"Clint Eastwood\");\r",
									"    pm.expect(responseJson.age).to.eql(93);\r",
									"    pm.expect(responseJson.email).to.eql(\"ceastwood@gmail.com\");\r",
									"    pm.expect(responseJson.biography).to.eql(\"Clint Eastwood was born May 31, 1930 in San Francisco, to Clinton Eastwood Sr., a bond salesman and later manufacturing executive for Georgia-Pacific Corporation, and Ruth Wood (née Margret Ruth Runner), a housewife turned IBM clerk.\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"director\":{\r\n        \"name\": \"Clint Eastwood\",\r\n        \"age\": \"93\",\r\n        \"email\": \"ceastwood@gmail.com\",\r\n        \"biography\": \"Clint Eastwood was born May 31, 1930 in San Francisco, to Clinton Eastwood Sr., a bond salesman and later manufacturing executive for Georgia-Pacific Corporation, and Ruth Wood (née Margret Ruth Runner), a housewife turned IBM clerk.\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:5000/api/v1/directors/",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"v1",
								"directors",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Director",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is either 200 or 201\", () => {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 50ms\", ()=>{\r",
									"    pm.expect(pm.response.responseTime).to.be.below(100);\r",
									"});\r",
									"\r",
									"pm.test(\"Testing Directors has all the required Information\", ()=>{\r",
									"    const responseJson = pm.response.json();\r",
									"    pm.expect(responseJson.name).to.be.not.null;\r",
									"    pm.expect(responseJson.age).to.be.not.null;\r",
									"    pm.expect(responseJson.email).to.be.not.null;\r",
									"    pm.expect(responseJson.biography).to.be.not.null;\r",
									"    pm.expect(responseJson.id).to.be.not.null;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"biography\": \"During the mid-'50s he landed uncredited bit parts in such B-films as Revenge of the Creature (1955) and Tarantula (1955) while digging swimming pools and driving a garbage truck to supplement his income. In 1958, he landed his first consequential acting role in the long-running TV show Rawhide (1959) with Eric Fleming. Though only a secondary player the first seven seasons, Clint was promoted to series star when Fleming departed--both literally and figuratively--in its final year, along the way becoming a recognizable face to television viewers around the country.\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:5000/api/v1/directors/65d6f9759574d411a7997c00",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"v1",
								"directors",
								"65d6f9759574d411a7997c00"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Author",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is either 200 or 201\", () => {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 50ms\", ()=>{\r",
									"    pm.expect(pm.response.responseTime).to.be.below(50);\r",
									"});\r",
									"\r",
									"pm.test(\"Testing Directors has all the required Information\", ()=>{\r",
									"    const responseJson = pm.response.json();\r",
									"    pm.expect(responseJson.name).to.be.undefined;\r",
									"    pm.expect(responseJson.age).to.be.undefined;\r",
									"    pm.expect(responseJson.email).to.be.undefined;\r",
									"    pm.expect(responseJson.biography).to.be.undefined;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "localhost:5000/api/v1/directors/65d3c818108f5b19a9227ade",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"v1",
								"directors",
								"65d3c818108f5b19a9227ade"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Movies",
			"item": [
				{
					"name": "Get All Movies",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:5000/api/v1/movies",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"v1",
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Movie By Id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:5000/api/v1/movies/",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"v1",
								"movies",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Movie",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"movie\":{\r\n        \"title\": \"Twister\",\r\n        \"genre\": \"Action\",\r\n        \"director\": \"Jan de Bont\",\r\n        \"year\": \"1996\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:5000/api/v1/movies",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"v1",
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Movie",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"genre\":\"Adventure\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:5000/api/v1/movies/",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"v1",
								"movies",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Movie",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "localhost:5000/api/v1/movies/",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"v1",
								"movies",
								""
							]
						}
					},
					"response": []
				}
			]
		}
	]
}